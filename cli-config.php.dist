<?php

/* bootstrapping the repository implementation */

/* doctrine dbal configuration
 * For further details, please see Doctrine configuration page.
 * http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connection-details
 */
$user     = 'root';
$pass     = '';
$driver   = 'pdo_sqlite';
$host     = 'localhost';
$database = 'phpcr_benchmark';
$path     = 'benchmark.sqlite';
$uri      = 'http://localhost:8080/server';

// Bootstrap Doctrine
$dbConn = \Doctrine\DBAL\DriverManager::getConnection(array(
    'driver'    => $driver,
    'host'      => $host,
    'user'      => $user,
    'password'  => $pass,
    'dbname'    => $database,
    'path'      => $path,
));

/*
 * configuration
 */
$workspace  = 'benchmark'; // phpcr workspace to use
$user       = 'admin';
$pass       = 'admin';

$factory = new \Jackalope\RepositoryFactoryDoctrineDBAL();
//$factory = new \Jackalope\RepositoryFactoryJackrabbit();

$parameters = array(
//    'jackalope.jackrabbit_uri' => $uri,
    'jackalope.doctrine_dbal_connection' => $dbConn,
    \Jackalope\Session::OPTION_AUTO_LASTMODIFIED => false,
    'jackalope.logger' => new \Jackalope\Transport\Logging\Psr3Logger(new \Psr\Log\NullLogger()),
);

$credentials = new \PHPCR\SimpleCredentials($user, $pass);
$repository = $factory->getRepository($parameters);

$adminSession = $repository->login($credentials, 'default');
$workspaceInstance = $adminSession->getWorkspace();
if (!in_array($workspace, $workspaceInstance->getAccessibleWorkspaceNames())) {
    $workspaceInstance->createWorkspace($workspace);
}

if (isset($argv[1])
    && $argv[1] != 'benchmark'
    && $argv[1] != 'list'
    && $argv[1] != 'help'
) {
    $session = $repository->login($credentials, $workspace);

    $helperSet = new \Symfony\Component\Console\Helper\HelperSet(array(
        'dialog' => new \Symfony\Component\Console\Helper\DialogHelper(),
        'phpcr' => new \PHPCR\Util\Console\Helper\PhpcrHelper($session),
        'phpcr_console_dumper' => new \PHPCR\Util\Console\Helper\PhpcrConsoleDumperHelper(),
    ));

    return;
}

$append = in_array('--append', $argv);

$count = 100;
$key = array_search('--count', $argv);
if ($key && isset($argv[$key+1]) && is_numeric($argv[$key+1])) {
    $count = $argv[$key+1];
}
$sections = 10;
$key = array_search('--sections', $argv);
if ($key && isset($argv[$key+1]) && is_numeric($argv[$key+1])) {
    $sections = $argv[$key+1];
}

if (!$append && $factory instanceof \Jackalope\RepositoryFactoryDoctrineDBAL) {
    // recreate database schema
    $options = array('disable_fks' => $dbConn->getDatabasePlatform() instanceof \Doctrine\DBAL\Platforms\SqlitePlatform);
    $repositorySchema = new \Jackalope\Transport\DoctrineDBAL\RepositorySchema($options, $dbConn);
    $repositorySchema->reset();
    $workspaceInstance->createWorkspace($workspace);
}

$repository = $factory->getRepository($parameters);
return $repository->login($credentials, $workspace);

